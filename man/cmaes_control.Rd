% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmaes.R
\name{cmaes_control}
\alias{cmaes_control}
\title{CMA-ES Control Object}
\usage{
cmaes_control(
  maximize = FALSE,
  algo = "acmaes",
  max_fevals = 100,
  max_iter = NA_integer_,
  ftarget = NA_real_,
  f_tolerance = NA_real_,
  x_tolerance = NA_real_,
  lambda = NA_integer_,
  sigma = NA_real_,
  max_restarts = NA_integer_,
  elitism = NA_integer_,
  tpa = NA_integer_,
  tpa_dsigma = NA_real_,
  seed = NA_integer_,
  quiet = TRUE,
  x0_lower = NULL,
  x0_upper = NULL
)
}
\arguments{
\item{maximize}{(\code{logical(1)})\cr
Whether to maximize the objective function.
Default is \code{FALSE}.}

\item{algo}{(\code{character(1)})\cr
The CMAES variant to use.
Possible values are: \link{cmaes_algos}.
Default is "acmaes", as recommended by
\url{https://github.com/CMA-ES/libcmaes/wiki/Practical-hints}.}

\item{max_fevals}{(\code{integer(1)})\cr
The maximum number of function evaluations.
NA to disable.}

\item{max_iter}{(\code{integer(1)})\cr
The maximum number of ES iterations.
NA to disable.}

\item{ftarget}{(\code{numeric(1)})\cr
Stop when this target function value is reached.
NA to disable.}

\item{f_tolerance}{(\code{numeric(1)})\cr
Sets function tolerance as stopping criterion;
monitors the difference in function value over iterations and
stops optimization when below tolerance.
NA to disable.}

\item{x_tolerance}{(\code{numeric(1)})\cr
Sets parameter tolerance as stopping criterion.
NA to disable.}

\item{lambda}{(\code{integer(1)})\cr
Number of generated descendents per iteration.
Must be at least 2; NA for default handling by libcmaes.}

\item{sigma}{(\code{numeric(1)})\cr
Initial sigma for covariance.
NA for default handling by libcmaes.}

\item{max_restarts}{(\code{integer(1)})\cr
The maximum number of restarts, for IPOP and BIPOP.
NA for default handling by libcmaes.}

\item{elitism}{(\code{integer(1)})\cr
Sets elitism:\cr
\describe{
\item{0}{no elitism}
\item{1}{elitism: reinjects the best-ever seen solution}
\item{2}{initial elitism: reinject x0 as long as it is not improved upon}
\item{3}{initial elitism on restart: restart if best encountered solution is not
the the final solution and reinjects the best solution until
the population has better fitness, in its majority}
}
NA for default handling by libcmaes.}

\item{tpa}{(\code{integer(1)})\cr
Activates / deactivates two-point adaptation step-size mechanism.
0: no, 1: auto, 2: yes.
NA for default handling by libcmaes.}

\item{tpa_dsigma}{(\code{numeric(1)})\cr
Sets tpa dsigma value, use with care.
NA for default handling by libcmaes.}

\item{seed}{(\code{integer(1)})\cr
The seed for the random number generator. If \code{NA}, the seed is set to 0.
NB: The RNG of the libcmaes is different to the one in R and is hence not subject to R's seeding.
NA for default handling by libcmaes, time is used in libcmaes to seed.}

\item{quiet}{(\code{logical(1)})\cr
Whether to suppress libcmaes output.
Internal logging of libcmaes is rerouted to Rprintf, so things like
capture.output() will work. Useful for debugging.
Default is \code{TRUE}.}

\item{x0_lower}{(\code{numeric(1)})\cr
Optional lower bounds for randomizing the initial mean \code{x0},
also after restarts.
Use \code{NULL} to disable.}

\item{x0_upper}{(\code{numeric(1)})\cr
Optional upper bounds for randomizing the initial mean \code{x0},
also after restarts.
Use \code{NULL} to disable.}
}
\value{
A cmaes_control S3 object, which is a list with the passed arguments.
}
\description{
Create a control object for the CMA-ES algorithm.
For more information on the parameters, see here:
\url{https://cma-es.github.io/libcmaes/doc/html/classlibcmaes_1_1CMAParameters.html}.
}
